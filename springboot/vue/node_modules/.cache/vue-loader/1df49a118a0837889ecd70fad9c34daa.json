{"remainingRequest":"D:\\前端全栈之路\\外包\\毕设项目\\campus_treasure\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\前端全栈之路\\外包\\毕设项目\\campus_treasure\\springboot\\vue\\src\\views\\Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"D:\\前端全栈之路\\外包\\毕设项目\\campus_treasure\\springboot\\vue\\src\\views\\Home.vue","mtime":1646481618200},{"path":"D:\\前端全栈之路\\外包\\毕设项目\\campus_treasure\\springboot\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\前端全栈之路\\外包\\毕设项目\\campus_treasure\\springboot\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\前端全栈之路\\外包\\毕设项目\\campus_treasure\\springboot\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\前端全栈之路\\外包\\毕设项目\\campus_treasure\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\前端全栈之路\\外包\\毕设项目\\campus_treasure\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojbWFpbiB7CiAgd2lkdGg6IDUwMHB4OwogIGhlaWdodDogNDAwcHg7Cn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\" style=\"margin-bottom:70px;\">\n        <el-col :span=\"6\">\n          <el-card style=\"color:#409EFC\">\n            <div><i class=\"\"/>物品发布量</div>\n            <div style=\"padding:10px 0; text-align: center; font-weight: bold\">{{ this.goodsTotal }}</div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card style=\"color:#67C23A\">\n              <div>拾取量</div>\n              <div style=\"padding:10px 0; text-align: center; font-weight: bold\">{{ this.goodsFind }}</div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card style=\"color:#67C23A\">\n              <div>丢失量</div>\n              <div style=\"padding:10px 0; text-align: center; font-weight: bold\">{{ this.goodsLost }}</div>\n          </el-card>\n        </el-col>  \n    </el-row>\n    \n    <el-row>\n      <el-col :span=\"12\">\n        <div id=\"main\"></div>\n      </el-col>\n      <el-col :span=\"12\">\n        <div id=\"pie\" style=\"width: 500px; height: 400px\"></div>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      goodsTotal:null,\n      goodsLost:0,\n      goodsFind:0,\n    };\n  },\n  methods: {\n    getGoodsNum() {\n      this.request.get(\"/goods\").then(res=>{\n          console.log(res);\n          this.goodsTotal = res.length;\n          res.forEach(item => {\n            if(item.classification == \"拾取\") {\n              this.goodsFind ++;\n            }else{\n               this.goodsLost ++;\n            }\n          });\n      })\n\n    }\n\n  },\n  //页面元素渲染之后在触发\n  mounted() {\n    // 折线图\n    option = {\n      title: {\n        text: \"用户注册\",\n        subtext: \"趋势图\",\n        left: \"center\",\n      },\n      xAxis: {\n        type: \"category\",\n        data: [\"第一季度\", \"第二季度\", \"第三季度\", \"第四季度\"],\n      },\n      yAxis: {\n        type: \"value\",\n      },\n      series: [\n        {\n          data: null,\n          type: \"line\",\n        },\n        {\n          data: null,\n          type: \"bar\",\n        },\n      ],\n    };\n    let chartDom = document.getElementById(\"main\");\n    let myChart = echarts.init(chartDom);\n    let option;\n    this.request.get(\"echarts/userMembers\").then((res) => {\n      // console.log( res.data.x, res.data.y);\n      // option.xAxis.data = res.data.x;\n      option.series[0].data = res.data;\n      option.series[1].data = res.data;\n      myChart.setOption(option);\n    });\n\n    //饼图\n    pieOption = {\n      title: {\n        text: \"用户注册\",\n        subtext: \"比例图\",\n        left: \"center\",\n      },\n      tooltip: {\n        trigger: \"item\",\n      },\n      legend: {\n        orient: \"vertical\",\n        left: \"left\",\n      },\n      series: [\n        {\n          // name: \"Access From\",\n          type: \"pie\",\n          radius: \"55%\",\n          center: [\"50%\", \"60%\"],\n          data: [], // 数据图\n           label: {\n                normal: {\n                    show: true,\n                    formatter: '{b}: {c}({d}%)'\n                }\n            },\n        },\n      ],\n    };\n    let pieDom = document.getElementById(\"pie\");\n    let pieChart = echarts.init(pieDom);\n    let pieOption;\n\n    this.request.get(\"echarts/userMembers\").then((res) => {\n      pieOption.series[0].data = [\n        { value: res.data[0], name: \"第一季度\" },\n        { value: res.data[1], name: \"第二季度\" },\n        { value: res.data[2], name: \"第三季度\" },\n        { value: res.data[3], name: \"第四季度\" },\n      ];\n      pieChart.setOption(pieOption);\n    });\n\n     this.getGoodsNum();\n  \n  },\n \n};\n</script>\n\n<style scoped>\n#main {\n  width: 500px;\n  height: 400px;\n}\n</style>\n"]}]}